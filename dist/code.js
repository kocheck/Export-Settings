!function(){"use strict";const e={id:"ios-default",name:"iOS Default",platform:"ios",settings:[{format:"PNG",suffix:"@1x",constraint:{type:"SCALE",value:1}},{format:"PNG",suffix:"@2x",constraint:{type:"SCALE",value:2}},{format:"PNG",suffix:"@3x",constraint:{type:"SCALE",value:3}}]},t={id:"android-default",name:"Android Default",platform:"android",settings:[{format:"PNG",suffix:"mdpi",constraint:{type:"SCALE",value:1}},{format:"PNG",suffix:"hdpi",constraint:{type:"SCALE",value:1.5}},{format:"PNG",suffix:"xhdpi",constraint:{type:"SCALE",value:2}},{format:"PNG",suffix:"xxhdpi",constraint:{type:"SCALE",value:3}}]},s={id:"web-default",name:"Web Default",platform:"web",settings:[{format:"SVG",suffix:"",constraint:{type:"SCALE",value:1}},{format:"PNG",suffix:"@2x",constraint:{type:"SCALE",value:2}}]};function a(e){return e&&e.length>0}function r(e,t={}){const{timeout:s=2e3,type:a="success"}=t,r="error"===a?3500:s;figma.notify(e,{timeout:r})}const o=(e,t)=>r(e,{type:"success",timeout:t}),i=(e,t)=>r(e,{type:"error",timeout:t});const n=new class{prefix="lazy-export:";async get(e){try{return await figma.clientStorage.getAsync(this.prefix+e)}catch(t){return console.error("Storage get error:",t),null}}async set(e,t){try{await figma.clientStorage.setAsync(this.prefix+e,t)}catch(s){console.error("Storage set error:",s)}}async remove(e){try{await figma.clientStorage.deleteAsync(this.prefix+e)}catch(t){console.error("Storage remove error:",t)}}async clear(){try{const e=(await figma.clientStorage.keysAsync()).filter((e=>e.startsWith(this.prefix)));await Promise.all(e.map((e=>this.remove(e))))}catch(e){console.error("Storage clear error:",e)}}};async function c(e,t){try{const s=e.clone(),a=Math.min(t.maxWidth/s.width,t.maxHeight/s.height);s.resize(s.width*a,s.height*a);const r=await s.exportAsync({format:"PNG",constraint:{type:"SCALE",value:1}});return s.remove(),r}catch(s){return console.error("Preview generation failed:",s),null}}figma.showUI(__html__,{width:400,height:600});const g=figma.root.getPluginData("preferredLanguage")||figma.currentPage.parent?.getPluginData("preferredLanguage")||figma.ui.language||"en";async function u(e){const{selection:t}=figma.currentPage;if(!a(t))throw new Error("Please select at least one layer");const s=function(e){const t=[];return e.id||t.push("Preset ID is required"),e.name||t.push("Preset name is required"),e.platform||t.push("Platform is required"),e.settings&&0!==e.settings.length||t.push("Preset must contain at least one export setting"),e.settings.forEach(((e,s)=>{const a=function(e){const t=[];return e.format||t.push("Export format is required"),e.constraint&&(e.constraint.value<=0&&t.push("Constraint value must be greater than 0"),["SCALE","WIDTH","HEIGHT"].includes(e.constraint.type)||t.push("Invalid constraint type")),t}(e);a.length>0&&t.push(`Export setting ${s+1}: ${a.join(", ")}`)})),t}(e);if(s.length>0)throw new Error(`Invalid preset: ${s.join(", ")}`);try{for(const s of t)s.exportSettings=e.settings;o(`Applied ${e.name} export settings`)}catch(r){throw new Error(`Failed to apply export settings: ${r.message}`)}}async function l(){const{selection:e}=figma.currentPage;if(!a(e))throw new Error("Please select at least one layer");try{for(const t of e)t.exportSettings=[];o("Cleared export settings")}catch(t){throw new Error(`Failed to clear export settings: ${t.message}`)}}figma.ui.postMessage({type:"init",data:{language:g,selection:figma.currentPage.selection}}),figma.on("run",(async({command:a})=>{try{switch(a){case"quick-export-ios":await u(e);break;case"quick-export-android":await u(t);break;case"quick-export-web":await u(s);break;case"clear-settings":await l()}}catch(r){i(`Command failed: ${r.message}`),console.error("Command error:",r)}})),figma.ui.onmessage=async e=>{try{switch(e.type){case"applySettings":{if(!e.preset)throw new Error("No preset selected");const{selection:t}=figma.currentPage;if(!t.length)throw new Error("Please select at least one layer");await u(e.preset),figma.ui.postMessage({type:"success",message:"Export settings applied successfully"});break}case"clearSettings":await l();break;case"cancel":figma.closePlugin();break;case"getCustomPresets":{const e=await n.getCustomPresets();figma.ui.postMessage({type:"customPresets",presets:e});break}case"saveCustomPreset":{await n.saveCustomPreset(e.preset);const t=await n.getCustomPresets();figma.ui.postMessage({type:"customPresets",presets:t}),o("Custom preset saved");break}case"deleteCustomPreset":{await n.deleteCustomPreset(e.presetId);const t=await n.getCustomPresets();figma.ui.postMessage({type:"customPresets",presets:t}),o("Custom preset deleted");break}case"generatePreviews":{const t=e.nodeIds.map((e=>figma.getNodeById(e))).filter(Boolean);for(const e of t)if(e&&"exportAsync"in e){const t=await c(e,{maxWidth:200,maxHeight:200});t&&figma.ui.postMessage({type:"previewGenerated",nodeId:e.id,preview:`data:image/png;base64,${figma.base64Encode(t)}`})}break}}}catch(t){figma.ui.postMessage({type:"error",message:t.message}),console.error("Operation error:",t)}}}();
